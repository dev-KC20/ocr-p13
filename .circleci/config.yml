# at src commit build docker image of the site,
# lint & test it,
# if ok then push it to dockerhub
# if ok then deploy it to heroku
version: 2.1

orbs:
  heroku: circleci/heroku@1.2.6

jobs:
  lint_and_test:
    docker:
      - image: cimg/python:3.10
    resource_class: small
    steps:
      # get the src from GH
      - checkout
      - run:
          name: install packages
          command: |
            pip install --user --no-cache-dir -r requirements.txt
          when: always
      - run:
          name: check linting
          command: |
            flake8
      - run:
          name: run unit tests
          command: |
            pytest
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build_docker_image:
    docker:
      - image: cimg/python:3.10
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: build and deploy to dockerhub
          command: |
            docker image build --file=Dockerfile --tag=$DOCKER_USERNAME/$IMAGE_REPO:$CIRCLE_SHA1 .
            echo "$DOCKER_PASSWORD" | docker login --username=$DOCKER_USERNAME --password-stdin
            docker image push $DOCKER_USERNAME/$IMAGE_REPO:$CIRCLE_SHA1

  deploy_docker_to_heroku:
    executor: heroku/default
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - heroku/install
      # the create line is usually commented
      # if you need to re create the app, please comment the line out for one commit only.
      # heroku apps:create $HEROKU_APP_NAME --region eu --addons=heroku-postgresql
      # heroku config:set CSRF_TRUSTED_ORIGINS=$CSRF_TRUSTED_ORIGINS -a $HEROKU_APP_NAME
      # heroku apps:create $HEROKU_APP_NAME --region eu --addons=heroku-postgresql
      # heroku heroku maintenance:on -a $HEROKU_APP_NAME
      # heroku heroku maintenance:off -a $HEROKU_APP_NAME
      - run:
          name: deploy container to heroku
          command: |
            heroku container:login
            heroku apps:create $HEROKU_APP_NAME --region eu --addons=heroku-postgresql
            heroku config:set SECRET_KEY=$SECRET_KEY -a $HEROKU_APP_NAME
            heroku config:set ENVIRONMENT=production -a $HEROKU_APP_NAME
            heroku config:set ALLOWED_HOSTS=$ALLOWED_HOSTS -a $HEROKU_APP_NAME
            heroku config:set DEBUG_COLLECTSTATIC=$DISABLE_COLLECTSTATIC  -a $HEROKU_APP_NAME
            heroku config:set DISABLE_COLLECTSTATIC=$DISABLE_COLLECTSTATIC -a $HEROKU_APP_NAME
            heroku config:set SENTRY_DSN=$SENTRY_DSN -a $HEROKU_APP_NAME
            heroku config:set ADMIN_USERNAME=$ADMIN_USERNAME -a $HEROKU_APP_NAME
            heroku config:set ADMIN_PASSWORD=$ADMIN_PASSWORD -a $HEROKU_APP_NAME
            heroku config:set ADMIN_EMAIL=$ADMIN_EMAIL -a $HEROKU_APP_NAME
            heroku config:set ADMIN_EMAIL=$ADMIN_EMAIL -a $HEROKU_APP_NAME
            heroku container:push -a $HEROKU_APP_NAME web
            heroku container:release -a $HEROKU_APP_NAME web
            heroku run python manage.py migrate -a $HEROKU_APP_NAME
            heroku run python manage.py loaddata oclet.json -a $HEROKU_APP_NAME
      # - run:
      #     name: initiate app db on heroku
      #     command: |
      # - heroku/check-authentication:
      #     print-whoami: false
      # - heroku/push-docker-image:
      #     process-types: web
      # - heroku/release-docker-image:
      #     process-types: web

workflows:
  build_and_deploy:
    jobs:
      - lint_and_test
      - build_docker_image:
          requires:
            - lint_and_test
      - deploy_docker_to_heroku:
          requires:
            - build_docker_image
          filters:
            branches:
              only:
                - main
