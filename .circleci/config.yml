# at src commit build docker image of the site,
# lint & test it,
# if ok then push it to dockerhub
# if ok then deploy it to heroku
version: 2.1

orbs:
  heroku: circleci/heroku@1.2.6

jobs:
  lint_and_test:
    docker:
      - image: cimg/python:3.10
    resource_class: small
    steps:
      # get the src from GH
      - checkout
      - run:
          name: install packages
          command: |
            pip install --user --no-cache-dir -r requirements.txt
          when: always
      - run:
          name: check linting
          command: |
            flake8
      - run:
          name: run unit tests
          command: |
            pytest
      - store_artifacts:
          path: test-reports/
          destination: python_app

  build_docker_image:
    docker:
      - image: cimg/python:3.10
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: build and deploy to dockerhub
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username=$DOCKER_USERNAME --password-stdin
            docker image build --file=Dockerfile --tag=$DOCKER_USERNAME/$IMAGE_REPO:$CIRCLE_SHA1 --tag=$DOCKER_USERNAME/$IMAGE_REPO:latest .
            docker image push $DOCKER_USERNAME/$IMAGE_REPO:$CIRCLE_SHA1 


  deploy_docker_to_heroku:
    executor: heroku/default
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - heroku/install
      - run: |
          heroku config:set DEBUG=false -a $HEROKU_APP_NAME
          heroku config:set SECRET_KEY=$SECRET_KEY -a $HEROKU_APP_NAME
          heroku config:set SENTRY_DSN=$SENTRY_DSN -a $HEROKU_APP_NAME
          heroku config:set ALLOWED_HOSTS=$ALLOWED_HOSTS -a $HEROKU_APP_NAME
      - run: |
          heroku run python manage.py makemigrations -a $HEROKU_APP_NAME
          heroku run python manage.py migrate -a $HEROKU_APP_NAME
      - heroku/check-authentication:
          print-whoami: false
      - heroku/push-docker-image:
          process-types: web 
      - heroku/release-docker-image:
          process-types: web 

workflows:
  build_and_deploy:
    jobs:
      - lint_and_test
      - build_docker_image:
          requires:
            - lint_and_test
      - deploy_docker_to_heroku:
          requires:
            - build_docker_image
          filters:
            branches:
              only:
                - main
